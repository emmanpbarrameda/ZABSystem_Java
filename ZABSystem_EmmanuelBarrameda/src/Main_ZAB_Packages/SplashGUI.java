// ©  M A D E		B Y		E M M A N		B A R R A M E D A  © //
package Main_ZAB_Packages;

import com.formdev.flatlaf.FlatLightLaf;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Image;
import java.io.IOException;
import java.net.ServerSocket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.border.LineBorder;

/**
 *
 * @author EMMANUEL PEÑAFLORIDA BARRAMEDA
 */
public final class SplashGUI extends javax.swing.JFrame {

    public static ServerSocket zab_ServerSocketstatus;

    /**
     * Creates new form SplashGUI
     */
    public SplashGUI() {
        initComponents();
        setLocationRelativeTo(null); //<-- center to the screen the frame
        this.setIconImage(new ImageIcon(getClass().getResource("/Images/MAINICON_128px.png")).getImage()); //<-- set the icon for this frame
        SplashGUI.this.getRootPane().setBorder(new LineBorder(new Color(50, 27, 140), 2, false)); //<-- set border for this frame
        progress.setVisible(false);

        try {
            checkAppTaskStatus();
        } catch (IOException ex) {
            Logger.getLogger(SplashGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    //check if the Program is Running or Not
    public void checkAppTaskStatus() throws IOException {
        zab_ServerSocketstatus = null;
        try {
            zab_ServerSocketstatus = new ServerSocket(1044);
        } catch (IOException e) {
            //System.err.println("Application already running!");
            shuttingdown();
            System.exit(-1);
        }
    }

    //shutting down void
    public void shuttingdown() throws IOException {
        final JProgressBar progressBar1 = new JProgressBar();
        progressBar1.setIndeterminate(true);
        final JOptionPane optionPane1 = new JOptionPane("<html><center>2 Instances of This Program Cannot Be Running at The Same Time!<br>Check if the Program is Already Running on Background!<br><br>Exiting now...</br></center></html>", JOptionPane.ERROR_MESSAGE, JOptionPane.DEFAULT_OPTION, null, new Object[]{}, null);
        final JDialog dialog1 = new JDialog();
        optionPane1.add(progressBar1, BorderLayout.CENTER);
        progressBar1.setIndeterminate(true);
        dialog1.setTitle("SYSTEM ERROR | ECoders");
        dialog1.setAlwaysOnTop(true);
        dialog1.setModal(true);
        dialog1.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        dialog1.setContentPane(optionPane1);
        dialog1.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
        dialog1.pack();
        Image imageloadingtop1;
        imageloadingtop1 = ImageIO.read(getClass().getResource("/Images/wait_16px.png"));
        dialog1.setIconImage(imageloadingtop1); //set icon to dialog
        dialog1.setLocationRelativeTo(null); //center the dialog

        // Set a timer
        new Thread(() -> {
            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
            }
            dialog1.dispose();
            //System.exit(0);
        }).start();
        dialog1.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        mainIcon = new javax.swing.JLabel();
        zabsystem = new javax.swing.JLabel();
        zabmeaning = new javax.swing.JLabel();
        mainAnimatedIcon = new rojerusan.componentes.RSProgressMaterial();
        jLabel1 = new javax.swing.JLabel();
        progress = new javax.swing.JProgressBar();
        kGradientPanel1 = new keeptoo.KGradientPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        setUndecorated(true);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(new java.awt.Color(249, 250, 253));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MAINICON_128px.png"))); // NOI18N
        jPanel1.add(mainIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 410, 100));

        zabsystem.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        zabsystem.setForeground(new java.awt.Color(50, 27, 140));
        zabsystem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zabsystem.setText("ZAB SYSTEM");
        jPanel1.add(zabsystem, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 410, 50));

        zabmeaning.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        zabmeaning.setForeground(new java.awt.Color(76, 41, 211));
        zabmeaning.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zabmeaning.setText("Zodiac Sign, Age Calculator & Birthstone System");
        jPanel1.add(zabmeaning, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 410, -1));

        mainAnimatedIcon.setForeground(new java.awt.Color(50, 27, 140));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("0%");
        mainAnimatedIcon.add(jLabel1);
        jLabel1.setBounds(44, 130, 80, 20);

        jPanel1.add(mainAnimatedIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 170, 170));

        progress.setBackground(new java.awt.Color(249, 250, 253));
        progress.setForeground(new java.awt.Color(249, 250, 253));
        progress.setBorderPainted(false);
        jPanel1.add(progress, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 410, -1));

        kGradientPanel1.setEndColor(new java.awt.Color(204, 204, 204));
        kGradientPanel1.setGradientFocus(600);
        kGradientPanel1.setStartColor(new java.awt.Color(249, 250, 253));
        jPanel1.add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 310));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            System.err.println("Failed to initialize modern LaF" + ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SplashGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private keeptoo.KGradientPanel kGradientPanel1;
    public rojerusan.componentes.RSProgressMaterial mainAnimatedIcon;
    private javax.swing.JLabel mainIcon;
    public javax.swing.JProgressBar progress;
    private javax.swing.JLabel zabmeaning;
    private javax.swing.JLabel zabsystem;
    // End of variables declaration//GEN-END:variables
}
